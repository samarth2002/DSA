// 2 pass
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
        ListNode* removeNthFromEnd(ListNode* head, int n) {
            int C = 0;
            ListNode* temp = head;
            ListNode* temp2 = head;
            while(temp)
            {
                C++;
                temp = temp->next;
                
            }
            if(C==1)
            {
                return NULL;
            }
            if(n==C)
            {
                temp2 = temp2->next;
                return temp2;
            }
            for(int i = 1; i < C-n ; i++)
            {
                head = head->next;
                cout << head->val;
            }
            if(n==1)
            {
                head->next = NULL;
            }else
            {
            head->next=head->next->next;
            }
            return temp2;
            
    }
};


/*

ListNode *fast = head, *slow = head;
        for (int i = 0; i < n; i++) fast = fast->next;
        if (!fast) return head->next;
        while (fast->next) fast = fast->next, slow = slow->next;
        slow->next = slow->next->next;
        return head;

*/



// 1 Passyo
