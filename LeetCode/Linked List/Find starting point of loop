/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */



// 2*(L1 + L2) = L1 + L2 + nC


class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
       ListNode* fast = head , *slow = head;
        ListNode* temp = head;
        
        while(fast && fast->next)
        {
            slow = slow->next;
            fast = fast->next->next;
            if(fast==slow){
                cout<< fast->val;
                while(temp!=slow)
                {
                    temp = temp->next;
                    slow = slow->next;
                }
                return temp;
            }
        }
        return NULL;
    }
};
