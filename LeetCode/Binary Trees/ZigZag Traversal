/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        bool LeftToRight = true;
        queue<TreeNode*> q;
        vector<vector<int>> res;
        if(!root){return res;}
        q.push(root);
        
        while(!q.empty())
        {
           
            int size = q.size();
            vector<int> element(size);
            for(int i = 0 ; i < size; i++)
            {
                 TreeNode* node = q.front();
                 q.pop();
                int index = LeftToRight? i : size-1-i;
                element[index] = node->val;
                if(node->left)
                {
                q.push(node->left);
                }
                if(node->right)
                {
                    q.push(node->right);
                }
            }
            LeftToRight = !LeftToRight;
            res.push_back(element);
        }
        return res;
    }
};
