O(n)+O(n)

class Solution {
public:
    void sortColors(vector<int>& nums) {
        int r=0 , w=0  , b=0;
        int n = nums.size();
        for(int i = 0 ; i < n ; i++)
        {
            if(nums[i]==0)
            {
                r++;
            }else if(nums[i]==1)
            {
                w++;
            }
            else
            {
                b++;
            }
        }
        for(int i = 0; i < r ; i++)
        {
            nums[i] = 0;
        }
        for(int i = r; i < r+w ; i++)
        {
            nums[i] = 1;
        }
        for(int i = r+w; i < n ; i++)
        {
            nums[i] = 2;
        }
    }
};


// O(n) Dutch National Flag Algorithm

class Solution {
public:
    void sortColors(vector<int>& nums) {
        int n = nums.size();
        int l = 0 , mid = 0 , h = n-1;

        while(mid<=h)
        {
            if(nums[mid]==0)
            {
                swap(nums[l++],nums[mid++]);
            }
            else if(nums[mid]==1)
            {
                mid++;
            }else if(nums[mid]==2)
            {
                swap(nums[mid],nums[h--]);
            }
        }
            
        
    }
};
