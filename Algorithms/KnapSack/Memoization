#include <bits/stdc++.h>

using namespace std;



int KnapSack(int wt[], int val[], int W, int n,int t[][1002])
{
    if (W == 0 || n == 0)
    {
        return 0;
    }
    if(t[n][W]!=-1)
    {
        return t[n][W];
    }
    if (wt[n - 1] <= W)
    {
        return t[n][W] = max(val[n - 1] + KnapSack(wt, val, W - wt[n - 1], n - 1,t) , KnapSack(wt, val, W, n - 1,t) );
    }
    else if (wt[n - 1] > W)
    {
        return t[n][W] = KnapSack(wt, val, W, n - 1, t);
    }
    return 0;
}

int main()
{
    int t[102][1002];
    int wt[] = {1, 3, 4, 5};
    int val[] = {1, 4, 5, 7};
    int W = 7;
    memset(t, -1, sizeof(t));
    int n = sizeof(wt) / sizeof(int);
    cout << KnapSack(wt, val, W, n,t);
    return 0;
}
